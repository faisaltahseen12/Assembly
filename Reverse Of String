.model small
.stack 100h
.data

; The string to be printed
string db 'Faisal', '$'

.code
main proc far
mov ax, @data
mov ds, ax

; call reverse function
call reverse

; load address of the string
lea dx, string

; output the string
; loaded in dx
mov ah, 09h
int 21h

; interrupt to exit
mov ah, 4ch
int 21h

main endp
reverse proc
; load the offset of
; the string
mov si, offset string

; count of characters of the;
; string
mov cx, 0h

loop1:
; compare if this is;
; the last character
mov ax, [si]
cmp al, '$'
je label1

; else push it in the;
; stack
push [si]

; increment the pointer;
; and count
inc si
inc cx

jmp loop1

label1:
; again load the starting;
; address of the string
mov si, offset string

loop2:
; if count not equal to zero
cmp cx, 0
je exit

; pop the top of stack
pop dx

; make dh, 0
xor dh, dh

; put the character of the;
; reversed string
mov [si], dx

; increment si and;
; decrement count
inc si
dec cx

jmp loop2

exit:
; add $ to the end of string
mov [si], '$ '
ret

reverse endp
end main
